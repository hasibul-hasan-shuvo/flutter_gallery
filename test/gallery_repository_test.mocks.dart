// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_gallery/test/gallery_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_gallery/app/data/data_source/local/gallery_local_data_source.dart'
    as _i2;
import 'package:flutter_gallery/app/domain/model/album.dart' as _i4;
import 'package:flutter_gallery/app/domain/model/photo.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GalleryLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGalleryLocalDataSource extends _i1.Mock
    implements _i2.GalleryLocalDataSource {
  MockGalleryLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> checkGalleryPermission() => (super.noSuchMethod(
        Invocation.method(
          #checkGalleryPermission,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> requestGalleryPermission() => (super.noSuchMethod(
        Invocation.method(
          #requestGalleryPermission,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i4.Album>> getAlbums() => (super.noSuchMethod(
        Invocation.method(
          #getAlbums,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Album>>.value(<_i4.Album>[]),
      ) as _i3.Future<List<_i4.Album>>);

  @override
  _i3.Future<List<_i5.Photo>> getImagesByAlbumName(String? albumName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImagesByAlbumName,
          [albumName],
        ),
        returnValue: _i3.Future<List<_i5.Photo>>.value(<_i5.Photo>[]),
      ) as _i3.Future<List<_i5.Photo>>);
}
